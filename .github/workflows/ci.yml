name: Continuous Integration

on:
  push:
    branches:
      - master
      - "**"
  pull_request:

jobs:
  setup:
    name: Setup environment
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.15.1

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v1

      - id: cache-key
        name: Compute cache key
        run: echo "key=${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}" >> $GITHUB_OUTPUT

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install


  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.1
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun test

  chromatic:
    name: Chromatic Deployment
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.1
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true

  publish-storybook-docker:
    name: Publish Storybook Docker
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.1
      - uses: oven-sh/setup-bun@v1
      - run: bun install

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PWD }}

      - name: Extract version from package.json
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Build and push Storybook image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            tracktor/design-system-storybook:${{ env.VERSION }}
            tracktor/design-system-storybook:latest

  publish-npm:
    name: Publish package to npm
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.1
          registry-url: 'https://registry.npmjs.org'

      - uses: oven-sh/setup-bun@v1
      - run: bun install

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(jq -r .version package.json)
          gh release create "$TAG" -F CHANGELOG.md

      - name: Publish on npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
