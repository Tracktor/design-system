name: CI/CD

on:
  push:
    branches:
      - master
      - "**"
  pull_request:

jobs:
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun test

  chromatic:
    name: Chromatic Deployment
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true

  publish-storybook-docker:
    name: Publish Storybook Docker
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PWD }}
      - run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: tracktor/design-system-storybook:${{ env.VERSION }}

  publish-npm:
    name: Publish package to npm
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(jq -r .version package.json)
          gh release create "$TAG" -F CHANGELOG.md
      - name: Publish on npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bunx npm publish --access public
