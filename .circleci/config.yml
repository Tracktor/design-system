version: 2.1

orbs:
  sre: tracktor/ci-tools@0.2.2
  gh: circleci/github-cli@2.1.0

references:
  production_context: &production_context
    - docker
    - npm
    - github

executors:
  build-docker:
    docker:
      - image: cimg/base:current
  publish-npm:
    docker:
      - image: cimg/node:16.17.0
  tests:
    docker:
      - image: cimg/node:16.17.0

jobs:
  run-unit-tests:
    executor: tests
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
      - run:
          name: Yarn install
          command: yarn
      - run:
          command: yarn test
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
  chromatic-deployment:
    executor: tests
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - run: yarn test-visual

  # Docker Build + Publish
  publish-storybook-docker:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - sre/load-package-version
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
      - sre/build-docker:
          image_name: "tracktor/design-system-storybook"
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER
          version: $VERSION
          publish: true

  publish-npm:
    executor: publish-npm
    steps:
      - gh/setup
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
      - run:
          name: Yarn install
          command: yarn
      - run:
          name: Create Github release
          command: |
            export TAG=$(grep '"version":' ./package.json | cut -d\" -f4)
            gh release create -F CHANGELOG.md $TAG
      - run:
          name: publish on npm
          command: yarn publish --access public

workflows:
  Unit Test:
    when: << pipeline.git.branch >>
    jobs:
      - run-unit-tests:
          name: Run unit tests
  Visual Test:
    when:
      and:
        - not:
            equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - chromatic-deployment:
          name: Chromatic Deployment
  Release:
    when:
      equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - run-unit-tests:
          name: Run unit tests
      - publish-storybook-docker:
          name: Publish Storybook
          context: *production_context
          requires:
            - Run unit tests
      - publish-npm:
          name: Publish NPM
          context: *production_context
          requires:
            - Run unit tests
